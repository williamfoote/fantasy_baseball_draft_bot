head(batc)
knitr::opts_chunk$set(echo = TRUE)
batc <- read.csv("bat_atc_23.csv")
atc <- read.csv("pitch_atc_23.csv")
batc <- read.csv("bat_atc_23.csv")
patc <- read.csv("pitch_atc_23.csv")
head(patc)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# zips <- read.csv("pitch_zips.csv")
# steamer <- read.csv("pitch_steamer.csv")
# dc <- read.csv("pitch_depthcharts.csv")
atc <- read.csv("pitch_atc_23.csv")
# bat <- read.csv("pitch_thebat.csv")
# all_dfs <- list(bat = bat, atc = atc, dc = dc, zips = zips, steamer = steamer)
# head(zips)
# head(steamer)
# head(dc)
head(atc)
# head(bat)
# dc$SVHD <- with(dc, SV + HLD)
atc$SVHD <- with(atc, SV + HLD)
cats <- c("IP", "SO", "QS", "ERA", "WHIP", "SVHD")
order_small_to_large <- c("bat", "atc", "dc", "zips", "steamer")
me1 <- function(x, y, cat = "QS", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "QS", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
pitch <- atc %>%
select(Name, Team, PlayerId, IP, SO, QS, ERA, WHIP, SVHD)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
pitching_2 <- pitch
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(pitching_ordered[1:300, 1:3], pitch, by = c("Name", 'Team', 'PlayerId'))
pitching_2 <- temp
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
pitching_ordered$rank <- 1:300
pitching_ordered$pos <- 'SP'
View(pitching_ordered)
write.csv(pitching_ordered, "patc_pr.csv")
head(batc)
patc %>% select('Name')
patc %>% select(c('Name', 'ADP'))
head(patc)
cats <- c('W', 'QS')
patc %>% select(cats)
patc %>% select(all_of(cats))
numeric_test <- patc %>% select(all_of(cats))
numeric_test * c(2, 0)
numeric_test * matrix(data = c(2, 9))
numeric_test * matrix(data = c(2, 0), ncol = 2)
numeric_test %*% matrix(data = c(2, 0), ncol = 2)
t(numeric_test) * c(2, 0)
t(t(numeric_test) * c(2, 0))
matrix(c(2, 0), nrow = 3, ncol = 2)
matrix(c(2, 0), nrow = 3, ncol = 2, byrow = T)
matrix(c(2, 0), nrow = ncol(patc), ncol = 2, byrow = T)
test_mult <- matrix(c(2, 0), nrow = nrow(patc), ncol = 2, byrow = T)
numeric_test %*% test_mult
matrix(numeric_test)
as.matrix(numeric_test)
as.matrix(numeric_test) %*% test_mult
as.matrix(numeric_test) %*% t(test_mult)
as.matrix(numeric_test) %*% matrix(c(2, 0), nrow = 2)
b = (as.matrix(numeric_test) %*% matrix(c(2, 0), nrow = 2))
head(b)
head(numeric_test)
b = (as.matrix(numeric_test) %*% matrix(c(2, 2), nrow = 2))
head(b)
head(batc)
head(patc)
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- numeric_cols %*% points
fpts
}
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- numeric_cols %*% points
}
fpts
}
head(batc)
get_points(batc, cats = c('X1B', 'X2B', 'X3B'), points = matrix(c(3, 6, 8), ncol = 2))
get_points(batc, cats = c('X1B', 'X2B', 'X3B'), points = matrix(c(3, 6, 8), ncol = 1))
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B'), points = matrix(c(3, 6, 8), ncol = 1))
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
data.frame('fpts' = fpts)
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
head(batc)
head(id_map)
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')])
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')])
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
head(batc)
batc[duplicated(batc$PlayerId), ]
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
data.frame('fpts' = fpts)
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
rbind(batc, patc)
table(batc$POS)
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF'), 'OF', POS)))
table(batc$POS)
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
table(batc$POS)
table(patc$POS)
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS')) %>%
distinct('PlayerId', .keep_all = T)
table(patc)
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS')) %>%
distinct('PlayerId', .keep_all = T)
table(patc$POS)
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS')], by = c('PlayerId' = 'IDFANGRAPHS'))
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
data.frame('fpts' = fpts)
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
head(batc)
rbind(batc[,, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')])
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]
patc
batc
batc[, c('Name', 'Team', 'proj_fpts', 'POS')]
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts
batc$proj_fpts
head(batc)
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(c('Name', 'Team'))
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team)
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T)
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T)
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts
combined_fpts %>% group_by(POS) %>% summarise(mean(proj_fpts))
combined_fpts %>% group_by(POS) %>% summarise(mean(proj_fpts))
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
View(combined_fpts)
batc
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
View(combined_fpts)
combined_fpts
write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(id_map)
head(id_map)
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
View(patc)
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
#get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
#points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
#get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
#points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG' = 'd3672a45-c5fa-40ed-a169-19bd5b383459']
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
underdog <- read.csv('underdog_rankings_raw.csv')
names(underdog)
left_join(combined_fpts, underdog, by = c('UNDERDOG', 'id'))
names(combined_fpts)
left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
id_map_2 <- read.csv('id_map_2.csv')
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map_2[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map_2[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
underdog <- read.csv('underdog_rankings_raw.csv')
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
#get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
#points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
#get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
#points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
View(final)
View(underdog)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[165, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(final)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(underdog)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[143, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[177, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[177, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
View(combined_proj_23)
names(id_map)
full_23 <- read.csv('combined_2023_projections.csv')
names(full_23) <- names(full_21)
combined_proj_23 <- left_join(full_23, id_map[, c(9, 6, 19, 20)], by = c('playerid' = 'IDFANGRAPHS')) %>%
distinct()
combined_proj_23
View(batting_ordered)
View(combined_proj_23)
View(combined_proj_23)
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rustchman'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'JT Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'JT.. Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
View(batting_2)
View(batting)
batting %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith'))
batting %>% filter(Name %in% c('Salvador Perez', 'Will Smith'))
