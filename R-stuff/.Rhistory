solve(t(x) %*% x)
t(x)
y <- matrix(c(4, 5, 3, 6, 4, 7, 5, 8, 8, 12, 6, 10))
y
t(x) %*% y
b <- matrix(c(4, 6, 9))
b
y-x%*%b
y-(x%*%b)
t(y-(x%*%b)) %*% y-(x%*%b)
t(y-(x%*%b)) %*% (y-(x%*%b))
qt(.975, 8)
9+2.3*8
9-2.3*8
9+2.3*.5
9-2.3*.5
3.0348/31
0.09789677*(1.56^2)
pf(12.42, 2, 58, F)
pf(12.42, 2, 58, F)
pf(12.42, 2, 58, T)
pf(12.42, 2, 58, lower.tail = T)
pf(12.42, 2, 3, lower.tail = T)
pf(12.42, 2, 3, lower.tail = F)
pf(12.42, 2, 58, lower.tail = F)
pf(256.2, 2, 96, lower.tail = F)
pf(13.37, 1, 95, F)
pf(13.37, 1, 95, lower.tail = F)
pf(22.56, 3, 45, l = F)
pf(22.56, 3, 45, lower.tail =  = F)
pf(22.56, 3, 45, lower.tail = F)
pf(2.11, 1, 19, lower = F)
q <- c(0,0,1,0,0,0,0,0,0,0,0,1)
C <- matrix(q, 2,6, byrow=TRUE)
C
q
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics100C/body_fat.txt", header=TRUE)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_22.csv")
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("fp_proj.csv")
knitr::opts_chunk$set(echo = TRUE)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("fp_proj.csv")
View(batc)
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP in the projections:
# batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc$RC <- with(batc, ((H+BB-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP in the projections:
# batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc$RC <- with(batc, ((H+BB)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
cats <- c("R", "HR", "RBI", "RC", "AVG", "OPS")
me1 <- function(x, y, cat = "R", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "R", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
batting <- batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
names(batc)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc1 <- read.csv("bat_atc_22.csv")
head( batc1[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)])
names(batc1)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
View(batc)
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
names(batc)
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, AVG, OPS)
head(batting)
names(batc)
```
-
x <- as.numeric(x)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
batting_2 <- batting
temp <- apply(batting_2[, -c(1:3)], 2, z_score)
batting_2 <- cbind(batting_2[, c(1, 2, 3)], temp)
sums <- apply(batting_2[, -c(1, 2, 3)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:629
batting_ordered$rank <- 1:nrow(batting_ordered)
batting_in_order <- batting_3[with(batting_3, order(batting_3$pr, decreasing = TRUE)), ]
head(batting_in_order)
View(batting_in_order)
View(batting_ordered)
names(batting)
batc$AVG
batc$AVG * batc$AB
batc$wAVG <- batc$AVG * batc$AB
batc$wOPS <- batc$OPS * batc$AB
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, wAVG, wOPS, AVG, OPS)
names(batc)
names(batting)
temp <- apply(batting_2[, -c(1:4, 11, 12)], 2, z_score)
batting_2 <- batting
temp <- apply(batting_2[, -c(1:4, 11, 12)], 2, z_score)
batting_2[, c(1, 2, 3)
]
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
batting_2
head(batting_2)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
head(sums)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
View(batting_ordered)
View(batting_3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
# nrow(bzip)
# nrow(bsteamer)
# nrow(bdc)
# nrow(bbat)
nrow(batc)
ordered <- c("bsteamer", "bzip", "batc", "bbat", "bdc")
View(batting_ordered)
knitr::opts_chunk$set(echo = TRUE)
# zips <- read.csv("pitch_zips.csv")
# steamer <- read.csv("pitch_steamer.csv")
# dc <- read.csv("pitch_depthcharts.csv")
atc <- read.csv("pitch_atc_23.csv")
# bat <- read.csv("pitch_thebat.csv")
# all_dfs <- list(bat = bat, atc = atc, dc = dc, zips = zips, steamer = steamer)
# head(zips)
# head(steamer)
# head(dc)
head(atc)
# head(bat)
# dc$SVHD <- with(dc, SV + HLD)
atc$SVHD <- with(atc, SV + HLD)
atc$HLD
cats <- c("IP", "SO", "QS", "ERA", "WHIP", "SVHD")
order_small_to_large <- c("bat", "atc", "dc", "zips", "steamer")
me1 <- function(x, y, cat = "QS", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "QS", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
pitch <- atc[, c(1, 2, 30, 5, 8, 14, 16, 19, 31)]
names(pitch)
names(patc)
names(atc)
library(tidyverse)
pitch <- atc %>%
select(Name, Team, PlayerId, IP, SO, QS, ERA, WHIP, SVHD)
pitch
m <- mean(x, na.rm = TRUE)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
names(pitch)
pitching_2 <- pitch
temp <- apply(pitching_2[, -c('Name', 'Team', 'PlayerId')], 2, z_score)
pitching_2 <- cbind(pitching_2[, c('Name', 'Team', 'PlayerId')], temp)
pitching_2 <- pitch
temp <- apply(pitching_2[, -c('Name', 'Team', 'PlayerId')], 2, z_score)
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
pitching_ordered$rank <- 1:810
pitching_ordered$rank <- 1:4320
View(pitching_ordered)
pitching_2 <- pitch
temp <- apply(pitching_2[1:300, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2 <- pitch
temp <- apply(pitching_2[1:300, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
left_join(pitching_ordered, pitching_2, by = 'Name')
temp <- left_join(pitching_2, pitching_ordered[, 1:3], by = 'Name')
temp
temp <- left_join(pitching_2, pitching_ordered[, 1:3], by = c("Name", 'Team', 'PlayerId'))
temp
temp <- left_join(pitching_ordered[1:300, 1:3], pitching_2, by = c("Name", 'Team', 'PlayerId'))
temp
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(pitching_ordered[1:300, 1:3], pitching_2, by = c("Name", 'Team', 'PlayerId'))
pitching_2 <- temp
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
View(pitching_ordered)
pitching_ordered$rank <- 1:300
head(batting_ordered)
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting_2, by = c("Name", 'Team', 'PlayerId'))
temp
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting_2, by = c("Name", 'Team', 'PlayerId'))
batting_2 <- temp
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
View(batting_ordered)
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)])
View(combined)
atc
View(batting_ordered)
View(batc)
View(batting_2)
View(batting)
id_map <- read.csv('player_id_map.csv')
View(id_map)
left_join(combined, id_map, by = c('PlayerId' = IDFANGRAPHS))
left_join(combined, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
combined
combined[combined$Name == 'Shohei Ohtani']
combined[combined$Name == 'Shohei Ohtani', ]
combined[combined$Name == 'Shohei Ohtani',]
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)])
combined[combined$Name == 'Shohei Ohtani', 'pr']
shohei_combined <- combined[combined$Name == 'Shohei Ohtani', 'pr']
combined %>%
distinct()
test <- combined %>%
distinct()
View(test)
test <- combined %>%
distinct(Name)
test <- combined %>%
distinct(Name, keep_all = T)
test <- combined %>%
distinct(Name, .keep_all = T)
test <- combined %>%
distinct(Name, .keep_all = T)
combined %>% duplicated()
combined[combined %>% duplicated(), ]
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
test[test$Name == 'Shohei Ohtani', 'pr']
shohei_combined
shohei_combined <- sum(combined[combined$Name == 'Shohei Ohtani', 'pr'])
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
test[test$Name == 'Shohei Ohtani', 'pr']
write.csv(test, 'players.csv')
joined <- left_join(test, id_map, by = 'PlayerId' = 'FANGRAPHSID')
joined <- left_join(test, id_map, by = c('PlayerId' = 'FANGRAPHSID'))
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
View(joined)
joined
names(joined)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS)
final
write.csv(final, 'players.csv')
pitching$pos <- 'SP'
pitching_ordered$pos <- 'SP'
batting_ordered$pos <-
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL'))))))
batting_ordered$pos <-
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL', NA))))))
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL', NA))))))
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P', NA)))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P', NA)))))))))
View(final)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', NA))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
write.csv(final, 'players.csv')
final
final <- final %>%
select(PlayerId, Name, Team, POS, pr)
names(final) <- c('espn_id', 'name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
names(final)
final <- final %>%
select(Name, Team, POS, pr)
write.csv(final, 'players.csv')
final
final <- final %>%
select(Name, Team, POS, pr)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
final
test <- read.csv('nfl_players.csv')
str(test)
View(final)
test <- combined %>%
distinct(Name, .keep_all = T)
View(test)
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
View(joined)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS) %>%
distinct(Name, .keep_all = T)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)])
batting_2 <- batting
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting_2, by = c("Name", 'Team', 'PlayerId'))
batting_2 <- temp
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
batting_ordered[, c(1:3, ncol(batting_ordered)-1)]
pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)]
ncol(pitching_ordered)
pitching_ordered
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-2)])
shohei_combined <- sum(combined[combined$Name == 'Shohei Ohtani', 'pr'])
test <- combined %>%
distinct(Name, .keep_all = T)
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
final <- joined %>%
select(Name, Team, PlayerId, pr, POS) %>%
distinct(Name, .keep_all = T)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
