sample(c(0, 1), size = 10, replace = True, prob = c(.2, .8))
sample(c(0, 1), size = 10, replace = TRUE, prob = c(.2, .8))
knitr::opts_chunk$set(echo = TRUE)
cat_1 <- sample(c(0, 1), prob = c(.5, .5))
cat_2 <- sample(c(0, 1), prob = c(.5, .5))
cat_3 <- sample(c(0, 1), prob = c(.5, .5))
cat_4 <- sample(c(0, 1), prob = c(.5, .5))
cat_5 <- sample(c(0, 1), prob = c(.5, .5))
cat_6 <- sample(c(0, 1), prob = c(.5, .5))
cat_7 <- sample(c(0, 1), prob = c(.5, .5))
cat_8 <- sample(c(0, 1), prob = c(.5, .5))
cat_9 <- sample(c(0, 1), prob = c(.5, .5))
cat_10 <- sample(c(0, 1), prob = c(.5, .5))
cat_11 <- sample(c(0, 1), prob = c(.5, .5))
cat_12 <- sample(c(0, 1), prob = c(.5, .5))
cat_12 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_1 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_2 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_3 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_4 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_5 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_6 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_7 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_8 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_9 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_10 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_11 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_12 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE)
cat_1 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.5, .5), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
cat_1 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_2 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_3 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_4 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_5 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_6 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_7 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_8 <- sample(c(0, 1), prob = c(.2, .8), replace = TRUE, size = 1)
cat_9 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_10 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_11 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
cat_12 <- sample(c(0, 1), prob = c(.9, .1), replace = TRUE, size = 1)
sum(cat_1, cat_2, cat_3, cat_4, cat_5, cat_6, cat_7, cat_8, cat_9, cat_10, cat_11, cat_12)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_22.csv")
nrow(batc)
# bbat$TB <- with(bbat, SLG * AB)
# bdc$TB <- with(bdc, SLG * AB)
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
# bbat$TB <- with(bbat, SLG * AB)
# bdc$TB <- with(bdc, SLG * AB)
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
me1 <- function(x, y, cat = "R", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
cats <- c("R", "HR", "RBI", "RC", "AVG", "OPS")
me1 <- function(x, y, cat = "R", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "R", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
View(batc)
m <- mean(x, na.rm = TRUE)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
names(batc)
batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
batting_2 <- batting
batting <- batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
batting_2 <- batting
temp <- apply(batting_2[, -c(1:3)], 2, z_score)
View(temp)
batting_2 <- cbind(batting_2[, c(1, 2)], temp)
sums <- apply(batting_2[, -c(1, 2)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_3
batting_3[order(batting_3$pr)]
batting_3[order(batting_3$pr), ]
help(order)
batting_3[order(batting_3$pr, decreasing = TRUE), ]
cbind(batting_3[order(batting_3$pr, decreasing = TRUE), ], 1:629
cbind(batting_3[order(batting_3$pr, decreasing = TRUE), ], 1:629)
cbind(c(batting_3[order(batting_3$pr, decreasing = TRUE), ], 1:629))
c(batting_3[order(batting_3$pr, decreasing = TRUE), ], 1:629))
c(batting_3[order(batting_3$pr, decreasing = TRUE), ], 1:629)
batting_ordered$rank <- 1:629
batting_2 <- batting
temp <- apply(batting_2[, -c(1:3)], 2, z_score)
batting_2 <- cbind(batting_2[, c(1, 2)], temp)
sums <- apply(batting_2[, -c(1, 2)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:629
batting_ordered
View(batting_ordered)
lm(pr~R+HR+RBI+RC+AVG+OPS, data = batting_ordered)
summary(lm(pr~R+HR+RBI+RC+AVG+OPS, data = batting_ordered))
pairs(batting_ordered[, c(2:8)])
pairs(matrix(batting_ordered[, c(2:8)]))
batting_3[c(5), ]
batting_3[c(5, 28, 15, 22, 107, 10), ]
apply(batting_3[c(5, 28, 15, 22, 107, 10), ], 2, mean)
apply(batting_3[c(5, 28, 15, 22, 107, 10), -c(1, 2)], 2, mean)
apply(batting_3[c(5, 28, 15, 22), -c(1, 2)], 2, mean)
apply(batting_3[c(5, 28, 15), -c(1, 2)], 2, mean)
apply(batting_3[c(5, 28, 10), -c(1, 2)], 2, mean)
.1*280
.1*280 + .9*-40
.1*280 + .9*-20
.2*280 + .8*-40
x <- seq(0, .5)
x
x <- seq(0, .5, len = 5)
x
x <- seq(0, .5, len = 6)
x
y <- seq(.5, 1, len = 6)
y
len(x)
length(x)
length(y)
plot(x*280 + y*-40)
plot(x*280 + y*-20, add = TRUE)
plot(x*280 + y*-40)
points(x*280 + y*-20)
plot(x*280 + y*-40, type = l)
plot(x*280 + y*-40, type = "l")
lines(x*280 + y*-20)
.5*280 + .95*-20
.05*280 + .95*-20
.10*280 + .9*-40
.15*280 + .8*-40
pf(3.75, 3, 8, low = F)
pf(6.32, 2, 9, low = F)
matrix(c(c(rep(1, 3), rep(0, 9)), c(rep(0, 3), rep(1, 5), rep(0, 4)), c(rep(0, 8), rep(1, 4))), ncol = 3)
x <- matrix(c(c(rep(1, 3), rep(0, 9)), c(rep(0, 3), rep(1, 5), rep(0, 4)), c(rep(0, 8), rep(1, 4))), ncol = 3)
x
t(x) %*% x
solve(t(x) %*% x)
t(x)
y <- matrix(c(4, 5, 3, 6, 4, 7, 5, 8, 8, 12, 6, 10))
y
t(x) %*% y
b <- matrix(c(4, 6, 9))
b
y-x%*%b
y-(x%*%b)
t(y-(x%*%b)) %*% y-(x%*%b)
t(y-(x%*%b)) %*% (y-(x%*%b))
qt(.975, 8)
9+2.3*8
9-2.3*8
9+2.3*.5
9-2.3*.5
3.0348/31
0.09789677*(1.56^2)
pf(12.42, 2, 58, F)
pf(12.42, 2, 58, F)
pf(12.42, 2, 58, T)
pf(12.42, 2, 58, lower.tail = T)
pf(12.42, 2, 3, lower.tail = T)
pf(12.42, 2, 3, lower.tail = F)
pf(12.42, 2, 58, lower.tail = F)
pf(256.2, 2, 96, lower.tail = F)
pf(13.37, 1, 95, F)
pf(13.37, 1, 95, lower.tail = F)
pf(22.56, 3, 45, l = F)
pf(22.56, 3, 45, lower.tail =  = F)
pf(22.56, 3, 45, lower.tail = F)
pf(2.11, 1, 19, lower = F)
q <- c(0,0,1,0,0,0,0,0,0,0,0,1)
C <- matrix(q, 2,6, byrow=TRUE)
C
q
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics100C/body_fat.txt", header=TRUE)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_22.csv")
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("fp_proj.csv")
knitr::opts_chunk$set(echo = TRUE)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("fp_proj.csv")
View(batc)
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP in the projections:
# batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc$RC <- with(batc, ((H+BB-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP in the projections:
# batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc$RC <- with(batc, ((H+BB)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
cats <- c("R", "HR", "RBI", "RC", "AVG", "OPS")
me1 <- function(x, y, cat = "R", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "R", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
batting <- batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
names(batc)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc1 <- read.csv("bat_atc_22.csv")
head( batc1[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)])
names(batc1)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
View(batc)
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
batc[, c(1, 2, 32, 10, 9, 11, 34, 18, 21)]
names(batc)
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, AVG, OPS)
head(batting)
names(batc)
```
-
x <- as.numeric(x)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
batting_2 <- batting
temp <- apply(batting_2[, -c(1:3)], 2, z_score)
batting_2 <- cbind(batting_2[, c(1, 2, 3)], temp)
sums <- apply(batting_2[, -c(1, 2, 3)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:629
batting_ordered$rank <- 1:nrow(batting_ordered)
batting_in_order <- batting_3[with(batting_3, order(batting_3$pr, decreasing = TRUE)), ]
head(batting_in_order)
View(batting_in_order)
View(batting_ordered)
names(batting)
batc$AVG
batc$AVG * batc$AB
batc$wAVG <- batc$AVG * batc$AB
batc$wOPS <- batc$OPS * batc$AB
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, wAVG, wOPS, AVG, OPS)
names(batc)
names(batting)
temp <- apply(batting_2[, -c(1:4, 11, 12)], 2, z_score)
batting_2 <- batting
temp <- apply(batting_2[, -c(1:4, 11, 12)], 2, z_score)
batting_2[, c(1, 2, 3)
]
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
batting_2
head(batting_2)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
head(sums)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
View(batting_ordered)
