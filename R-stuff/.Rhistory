get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
data.frame('fpts' = fpts)
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
head(batc)
rbind(batc[,, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')])
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]
patc
batc
batc[, c('Name', 'Team', 'proj_fpts', 'POS')]
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts
batc$proj_fpts
head(batc)
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')])
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(c('Name', 'Team'))
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team)
rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T)
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T)
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts
combined_fpts %>% group_by(POS) %>% summarise(mean(proj_fpts))
combined_fpts %>% group_by(POS) %>% summarise(mean(proj_fpts))
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
View(combined_fpts)
batc
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
View(combined_fpts)
combined_fpts
write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(id_map)
head(id_map)
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
View(patc)
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
#get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
#points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
#get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
#points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
combined_fpts <- rbind(batc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG' = 'd3672a45-c5fa-40ed-a169-19bd5b383459']
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
underdog <- read.csv('underdog_rankings_raw.csv')
names(underdog)
left_join(combined_fpts, underdog, by = c('UNDERDOG', 'id'))
names(combined_fpts)
left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
id_map_2 <- read.csv('id_map_2.csv')
batc <- read.csv("bat_atc_23.csv")
batc <- left_join(batc, id_map_2[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
batc$POS <- with(batc, ifelse(POS %in% c('1B', '2B', '3B', 'C', 'SS'), 'IF',
ifelse(POS %in% c('DH', 'OF', 'P'), 'OF', POS)))
patc <- read.csv("pitch_atc_23.csv")
patc <- left_join(patc, id_map_2[, c('POS', 'IDFANGRAPHS', 'UNDERDOG')], by = c('PlayerId' = 'IDFANGRAPHS'))
underdog <- read.csv('underdog_rankings_raw.csv')
get_points <- function(x, player_type = 'batter', cats, points) {
# Takes a dataframe x and calculates the projected fantasy points
# Based on cats (vector of category names), and points, an n x 1 matrix
# Corresponding to how many points per category instance. Key-value pairs
# Of Sorts.
if (player_type == 'batter') {
meta <- x %>%
select(c('Name', 'Team', 'PlayerId'))
numeric_cols <- x %>%
select(all_of(cats))
fpts <- as.matrix(numeric_cols) %*% points
}
fpts
}
#get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
#points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
#get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
#points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
batc$proj_fpts <- get_points(batc, cats = c('X1B', 'X2B', 'X3B', 'HR', 'BB', 'HBP', 'RBI', 'R', 'SB'),
points = matrix(c(3, 6, 8, 10, 3, 3, 2, 2, 4), ncol = 1))
patc$proj_fpts <- get_points(patc, cats = c('W', 'QS', 'SO', 'IP', 'ER'),
points = matrix(c(5, 5, 3, 3, -3), ncol = 1))
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[4, 'UNDERDOG'] = 'd3672a45-c5fa-40ed-a169-19bd5b383459'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
View(final)
View(underdog)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[165, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(final)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(underdog)
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[143, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[177, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
#write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
combined_fpts <- rbind(batc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')],
patc[, c('UNDERDOG', 'Name', 'Team', 'proj_fpts', 'POS', 'InterSD', 'InterSK', 'IntraSD')]) %>%
distinct(Name, Team, .keep_all = T) %>%
arrange(desc(proj_fpts))
combined_fpts$rank <- 1:nrow(combined_fpts)
combined_fpts[113, 'UNDERDOG'] = '5e2a3754-118c-47a7-b81e-51fb0c1ec8f3'
combined_fpts[177, 'UNDERDOG'] = '44b1df17-224b-4fe3-98cd-dae156588aa6'
#write.csv(combined_fpts, 'underdog_BB_mlb_rankings_23.csv')
final <- left_join(combined_fpts, underdog, by = c('UNDERDOG' = 'id'))
write.csv(final, 'underdog_BB_mlb_rankings_23.csv')
View(combined_fpts)
View(combined_proj_23)
names(id_map)
full_23 <- read.csv('combined_2023_projections.csv')
names(full_23) <- names(full_21)
combined_proj_23 <- left_join(full_23, id_map[, c(9, 6, 19, 20)], by = c('playerid' = 'IDFANGRAPHS')) %>%
distinct()
combined_proj_23
View(batting_ordered)
View(combined_proj_23)
View(combined_proj_23)
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rustchman'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'JT Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'JT.. Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
View(batting_2)
View(batting)
batting %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith', 'Adley Rutschman', 'J.T. Realmuto', 'Alejandro Kirk', 'Willson Contreras'))
combined_proj_23 %>% filter(Name %in% c('Salvador Perez', 'Will Smith'))
batting %>% filter(Name %in% c('Salvador Perez', 'Will Smith'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# zips <- read.csv("pitch_zips.csv")
# steamer <- read.csv("pitch_steamer.csv")
# dc <- read.csv("pitch_depthcharts.csv")
atc <- read.csv("pitch_atc_23.csv")
# bat <- read.csv("pitch_thebat.csv")
# all_dfs <- list(bat = bat, atc = atc, dc = dc, zips = zips, steamer = steamer)
# head(zips)
# head(steamer)
# head(dc)
head(atc)
# head(bat)
# dc$SVHD <- with(dc, SV + HLD)
atc$SVHD <- with(atc, SV + HLD)
# pqs <- function(x) {
#   if (x$GS < 10) { # Probably not a starter
#     p_qs <- 0
#   } else {
#     W <- x$W
#     L <- x$L
#     G <- x$G
#     IP <- x$IP
#     ER <- x$ER
#     intercept <- 0.08434435
#     x_w <- 0.17309031
#     x_l <- -0.20007936
#     x_g <- -0.09077845
#     x_ip <- 0.06996364
#     x_er <- 0.03699742
#     p_qs <- intercept + W*x_w + L*x_l + G*x_g + IP*x_ip + ER*x_er
#   }
#   p_qs
# }
#
#
# df_lengths <- c(nrow(zips), nrow(steamer), nrow(dc), nrow(atc))
#
# for(i in seq_len(df_lengths[1])) {
#   zips$QS[[i]] <- pqs(zips[i, ])
# }
#
# for(i in seq_len(df_lengths[2])) {
#   steamer$QS[[i]] <- pqs(steamer[i, ])
# }
#
# for(i in seq_len(df_lengths[3])) {
#   dc$QS[[i]] <- pqs(dc[i, ])
# }
#
# for(i in seq_len(df_lengths[4])) {
#   atc$QS[[i]] <- pqs(atc[i, ])
# }
cats <- c("IP", "SO", "QS", "ERA", "WHIP", "SVHD")
order_small_to_large <- c("bat", "atc", "dc", "zips", "steamer")
me1 <- function(x, y, cat = "QS", by = "playerid") { # If i were 1
temp <- merge(x[, c("Name", by, cat)], y[, c(by, cat)], by = by)
temp
}
me2 <- function(x, y, cat = "QS", by = "playerid") { # If i were greater than 1
temp <- merge(x, y[, c(by, cat)], by = by)
temp
}
pitch <- atc %>%
select(Name, Team, PlayerId, IP, SO, QS, ERA, WHIP, SVHD)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
pitching_2 <- pitch
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(pitching_ordered[1:300, 1:3], pitch, by = c("Name", 'Team', 'PlayerId'))
pitching_2 <- temp
temp <- apply(pitching_2[, -c(1:3)], 2, z_score)
pitching_2 <- cbind(pitching_2[, c(1, 2, 3)], temp)
pitching_2$ERA <- -1 * pitching_2$ERA
pitching_2$WHIP <- -1 * pitching_2$WHIP
sums <- apply(pitching_2[, -c(1, 2, 3)], 1, sum)
pitching_3 <- pitching_2
pitching_3$pr <- sums
head(pitching_3)
pitching_ordered <- pitching_3[order(pitching_3$pr, decreasing = TRUE), ]
pitching_ordered$rank <- 1:300
pitching_ordered$pos <- 'SP'
head(pitching_3[with(pitching_3, order(pitching_3$pr, decreasing = TRUE)), ])
write.csv(pitching_ordered, "patc_pr.csv")
write.csv(pitching_ordered, "patc_pr.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
# nrow(bzip)
# nrow(bsteamer)
# nrow(bdc)
# nrow(bbat)
nrow(batc)
ordered <- c("bsteamer", "bzip", "batc", "bbat", "bdc")
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
# bbat$TB <- with(bbat, SLG * AB)
# bdc$TB <- with(bdc, SLG * AB)
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP and CS in the projections:
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# Without HBP and CS:
#batc$RC <- with(batc, ((H+BB)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bbat$RC <- with(bbat, ((H+BB-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bdc$RC <- with(bdc, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$wAVG <- batc$AVG * batc$AB
batc$wOPS <- batc$OPS * batc$AB
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, wAVG, wOPS, AVG, OPS)
names(batting)
z_score <- function(x) {
x <- as.numeric(x)
m <- mean(x, na.rm = TRUE)
s <- sd(x, na.rm = TRUE)
z <- (x - m) / s
z
}
batting_2 <- batting
non_cats_names <- c('Name', 'Team', 'PlayerId', 'AB', 'AVG', 'OPS')
non_cats <- which(names(batting_2) == non_cats_names)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, c(7:12)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting, by = c("Name", 'Team', 'PlayerId'))
batting_2 <- temp
non_cats_names <- c('Name', 'Team', 'PlayerId', 'AB', 'AVG', 'OPS')
non_cats <- which(names(batting_2) == non_cats_names)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, c(7:12)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# add the raw data for context
batting_raw = batting[, -c(4, 9, 10)]
names(batting_raw)[-c(1:3)] <- paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
almost_done = left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
final_bat <- almost_done[, c(1:4, 15:20, 5:14)]
batting_in_order <- batting_3[with(batting_3, order(batting_3$pr, decreasing = TRUE)), ]
head(batting_in_order)
write.csv(batting_ordered, "batc_pr.csv")
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-2)])
shohei_combined <- sum(combined[combined$Name == 'Shohei Ohtani', 'pr'])
test <- combined %>%
distinct(Name, .keep_all = T)
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
final <- joined %>%
select(Name, Team, PlayerId, pr, POS) %>%
distinct(Name, .keep_all = T)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
View(final)
fpros_adp <- read.csv('fpros_espn_adp_2023.csv')
joined_1 <- left_join(fpros_adp[, c('Player', 'ESPN')], id_map[, c('IDFANGRAPHS', 'FANTPROSNAME', 'ESPNID', 'ESPNNAME')],
by = c('Player' = 'FANTPROSNAME'))
test <- joined_1 %>%
distinct(Player, ESPN, .keep_all = T)
test[2, c('IDFANGRAPHS', 'ESPNID', 'ESPNNAME')] <- c(13510, 32801, 'Jose Ramirez')
bj <- left_join(batting_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
pj <- left_join(pitching_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
View(bj)
fpros_adp <- read.csv('fpros_espn_adp_2023.csv')
joined_1 <- left_join(fpros_adp[, c('Player', 'ESPN')], id_map[, c('IDFANGRAPHS', 'FANTPROSNAME', 'ESPNID', 'ESPNNAME')],
by = c('Player' = 'FANTPROSNAME'))
test <- joined_1 %>%
distinct(Player, ESPN, .keep_all = T)
test[2, c('IDFANGRAPHS', 'ESPNID', 'ESPNNAME')] <- c(13510, 32801, 'Jose Ramirez')
# test[266, c('ESPNID', 'ESPNNAME')] <- c(4424286, 'Spencer Torkelson')
# test[322, c('ESPNID', 'ESPNNAME')] <- c(41325, 'Aaron Ashby')
# test[32, c('ESPNID', 'ESPNNAME')] <- c(41199, 'Shane McClanahan')
# test[69, c('ESPNID', 'ESPNNAME')] <- c(36380, 'Jordan Romano')
bj <- left_join(batting_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
pj <- left_join(pitching_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
write.csv(bj, 'batting_for_combined_projections_23.csv')
write.csv(pj, 'pitching_for_combined_projections_23.csv')
View(bj)
fpros_adp <- read.csv('fpros_espn_adp_2023.csv')
joined_1 <- left_join(fpros_adp[, c('Player', 'ESPN')], id_map[, c('IDFANGRAPHS', 'FANTPROSNAME', 'ESPNID', 'ESPNNAME')],
by = c('Player' = 'FANTPROSNAME'))
test <- joined_1 %>%
distinct(Player, ESPN, .keep_all = T)
View(test)
View(id_map)
fpros_adp
View(id_map_2)
id_map <- read.csv(id_map)
id_map <- read.csv('id_map.csv')
fpros_adp <- read.csv('fpros_espn_adp_2023.csv')
joined_1 <- left_join(fpros_adp[, c('Player', 'ESPN')], id_map[, c('IDFANGRAPHS', 'FANTPROSNAME', 'ESPNID', 'ESPNNAME')],
by = c('Player' = 'FANTPROSNAME'))
test <- joined_1 %>%
distinct(Player, ESPN, .keep_all = T)
test[1, c('IDFANGRAPHS', 'ESPNID', 'ESPNNAME')] <- c(13510, 32801, 'Jose Ramirez')
bj <- left_join(batting_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
pj <- left_join(pitching_ordered, test, by = c('PlayerId' = 'IDFANGRAPHS'))
write.csv(bj, 'batting_for_combined_projections_23.csv')
write.csv(pj, 'pitching_for_combined_projections_23.csv')
bj
bj %>% arrange(ESPN
)
bj %>% arrange(ESPN) %>% filter(!is.na(ESPN))
bj %>% arrange(ESPN
)
