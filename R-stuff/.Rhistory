left_join(combined, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
combined
combined[combined$Name == 'Shohei Ohtani']
combined[combined$Name == 'Shohei Ohtani', ]
combined[combined$Name == 'Shohei Ohtani',]
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)])
combined[combined$Name == 'Shohei Ohtani', 'pr']
shohei_combined <- combined[combined$Name == 'Shohei Ohtani', 'pr']
combined %>%
distinct()
test <- combined %>%
distinct()
View(test)
test <- combined %>%
distinct(Name)
test <- combined %>%
distinct(Name, keep_all = T)
test <- combined %>%
distinct(Name, .keep_all = T)
test <- combined %>%
distinct(Name, .keep_all = T)
combined %>% duplicated()
combined[combined %>% duplicated(), ]
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
test[test$Name == 'Shohei Ohtani', 'pr']
shohei_combined
shohei_combined <- sum(combined[combined$Name == 'Shohei Ohtani', 'pr'])
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
test[test$Name == 'Shohei Ohtani', 'pr']
write.csv(test, 'players.csv')
joined <- left_join(test, id_map, by = 'PlayerId' = 'FANGRAPHSID')
joined <- left_join(test, id_map, by = c('PlayerId' = 'FANGRAPHSID'))
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
View(joined)
joined
names(joined)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS)
final
write.csv(final, 'players.csv')
pitching$pos <- 'SP'
pitching_ordered$pos <- 'SP'
batting_ordered$pos <-
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL'))))))
batting_ordered$pos <-
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL', NA))))))
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL', NA))))))
final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P', NA)))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P', NA)))))))))
View(final)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', NA))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'OF', 'OF',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',
if_else(POS == 'P', 'P', POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))))
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
write.csv(final, 'players.csv')
final
final <- final %>%
select(PlayerId, Name, Team, POS, pr)
names(final) <- c('espn_id', 'name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
names(final)
final <- final %>%
select(Name, Team, POS, pr)
write.csv(final, 'players.csv')
final
final <- final %>%
select(Name, Team, POS, pr)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
final
test <- read.csv('nfl_players.csv')
str(test)
View(final)
test <- combined %>%
distinct(Name, .keep_all = T)
View(test)
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
View(joined)
final <- joined %>%
select(Name, Team, PlayerId, pr, POS) %>%
distinct(Name, .keep_all = T)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)])
batting_2 <- batting
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting_2, by = c("Name", 'Team', 'PlayerId'))
batting_2 <- temp
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
batting_ordered[, c(1:3, ncol(batting_ordered)-1)]
pitching_ordered[, c(1:3, ncol(pitching_ordered)-1)]
ncol(pitching_ordered)
pitching_ordered
combined <- rbind(batting_ordered[, c(1:3, ncol(batting_ordered)-1)], pitching_ordered[, c(1:3, ncol(pitching_ordered)-2)])
shohei_combined <- sum(combined[combined$Name == 'Shohei Ohtani', 'pr'])
test <- combined %>%
distinct(Name, .keep_all = T)
test[test$Name == 'Shohei Ohtani', 'pr'] <- shohei_combined
joined <- left_join(test, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
final <- joined %>%
select(Name, Team, PlayerId, pr, POS) %>%
distinct(Name, .keep_all = T)
final <- final %>%
mutate(pos_2 = if_else(POS == '1B', '1B/3B',
if_else(POS == '3B', '1B/3B',
if_else(POS == '2B', '2B/SS',
if_else(POS == 'SS', '2B/SS',
if_else(POS == 'DH', 'UTIL',
if_else(POS == 'SP', 'P',
if_else(POS == 'RP', 'P',POS))))))))
final <- final %>%
select(Name, Team, POS, pr)
names(final) <- c('name', 'team', 'position', 'points')
write.csv(final, 'players.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# zips <- read.csv("pitch_zips.csv")
# steamer <- read.csv("pitch_steamer.csv")
# dc <- read.csv("pitch_depthcharts.csv")
atc <- read.csv("pitch_atc_23.csv")
# bat <- read.csv("pitch_thebat.csv")
# all_dfs <- list(bat = bat, atc = atc, dc = dc, zips = zips, steamer = steamer)
write.csv(pitching_ordered, "patc_pr.csv")
View(batting_ordered)
write.csv(pitching_ordered, "patc_pr.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
write.csv(batting_ordered, "batc_pr.csv")
batting_2
head(batting)
batting[[, -c(9, 10)]]
batting[, -c(9, 10)]
left_join(batting_ordered, batting[, -c(9, 10)],by = c("Name", 'Team', 'PlayerId'))
left_join(batting_ordered, batting[, -c(9, 10)], by = c("Name", 'Team', 'PlayerId'), suffix = 'left')
# add the raw data for context
batting_raw = batting[, -c(9, 10)]
names(batting)[-c(1:3)] <- paste(names(batting)[-c(1:3)], '_raw', sep = '')
head(batting)
head(batting)
# add the raw data for context
batting_raw = batting[, -c(9, 10)]
head(batting_raw)
names(batting)[-c(1:3)] <- paste(names(batting)[-c(1:3)], '_raw', sep = '')
names(batting_raw)[-c(1:3)] <- paste(names(batting)[-c(1:3)], '_raw', sep = '')
names(batting_raw)[-c(1:3)] <- paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
head(batting_raw)
paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
paste(names(batting_raw)[-c(1:3)], sep = '')
# add the raw data for context
batting_raw = batting[, -c(9, 10)]
names(batting_raw)[-c(1:3)] <- paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
batting_raw
paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
paste(names(batting_raw)[-c(1:3)], sep = '')
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, wAVG, wOPS, AVG, OPS)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# bzip <- read.csv("bat_zips.csv")
# bsteamer <- read.csv("bat_steamer.csv")
# bdc <- read.csv("bat_dc.csv")
# bbat <- read.csv("bat_bat.csv")
batc <- read.csv("bat_atc_23.csv")
# nrow(bzip)
# nrow(bsteamer)
# nrow(bdc)
# nrow(bbat)
nrow(batc)
ordered <- c("bsteamer", "bzip", "batc", "bbat", "bdc")
# bsteamer$TB <- with(bsteamer, SLG * AB)
# bzip$TB <- with(bzip, SLG * AB)
batc$TB <- with(batc, SLG * AB)
# bbat$TB <- with(bbat, SLG * AB)
# bdc$TB <- with(bdc, SLG * AB)
# bsteamer$RC <- with(bsteamer, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# bzip$RC <- with(bzip, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
# If they have HBP and CS in the projections:
batc$RC <- with(batc, ((H+BB+HBP-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# Without HBP and CS:
#batc$RC <- with(batc, ((H+BB)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bbat$RC <- with(bbat, ((H+BB-CS)*(TB+.26*(BB))+.52*(SB))/(AB+BB))
# bdc$RC <- with(bdc, ((H+BB+HBP-CS)*(TB+.26*(BB+HBP))+.52*(SB))/(AB+BB+HBP))
batc$wAVG <- batc$AVG * batc$AB
batc$wOPS <- batc$OPS * batc$AB
batting <- batc %>%
select(Name, Team, PlayerId, AB, R, HR, RBI, RC, wAVG, wOPS, AVG, OPS)
names(batting)
batting_2 <- batting
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# Repeat the calculations on only the top 300
# Normalize to this number to compare against batters better
temp <- left_join(batting_ordered[1:300, 1:3], batting_2, by = c("Name", 'Team', 'PlayerId'))
batting_2 <- temp
non_cats <- c(1:4, 11, 12)
temp <- apply(batting_2[, -non_cats], 2, z_score)
batting_2 <- cbind(batting_2[, non_cats], temp)
sums <- apply(batting_2[, -c(1:6)], 1, sum)
batting_3 <- batting_2
batting_3$pr <- sums
batting_ordered <- batting_3[order(batting_3$pr, decreasing = TRUE), ]
batting_ordered$rank <- 1:nrow(batting_ordered)
# add the raw data for context
batting_raw = batting[, -c(9, 10)]
names(batting_raw)[-c(1:3)] <- paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'), suffix = 'left')
head(batting_raw)
left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
right_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
nrow(batting_ordered)
left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
almost_done = left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
names(almost_done)
head(almost_done)
# add the raw data for context
batting_raw = batting[, -c(4, 9, 10)]
names(batting_raw)
# add the raw data for context
batting_raw = batting[, -c(4, 9, 10)]
names(batting_raw)[-c(1:3)] <- paste(names(batting_raw)[-c(1:3)], '_raw', sep = '')
almost_done = left_join(batting_ordered, batting_raw, by = c("Name", 'Team', 'PlayerId'))
final <- almost_done[, c(1:3, )]
head(almost_done)
names(almost_done)
final <- almost_done[, c(1:4, 15:20, 5:14)]
head(final)
sample(c('UCLA', 'UCSF'), size = 1)
install.packages("baseballr")
library('baseballr')
devtools::install_github(repo = "BillPetti/baseballr")
install.packages('devtools')
devtools::install_github(repo = "BillPetti/baseballr")
library(baseballr)
help("fg_bat_leaders")
fg_bat_leaders(2022, 2020)
fg_bat_leaders(2022, 2022, qual = 0)
fg_bat_leaders(2021, 2021, qual = 0)
full_20 <- read.csv('combined_2020_projections.csv')
full_20
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2020_projections.csv')
full_22 <- read.csv('combined_2020_projections.csv')
knitr::opts_chunk$set(echo = TRUE)
fp_sp <- read.csv("fp_sp.csv")
pqs <- function(x) {
if (x$GS < 10) { # Probably not a starter
p_qs <- 0
} else {
W <- x$W
L <- x$L
G <- x$G
IP <- x$IP
ER <- x$ER
intercept <- 0.08434435
x_w <- 0.17309031
x_l <- -0.20007936
x_g <- -0.09077845
x_ip <- 0.06996364
x_er <- 0.03699742
p_qs <- intercept + W*x_w + L*x_l + G*x_g + IP*x_ip + ER*x_er
}
p_qs
}
degrom <- bat[bat$Name == "Jacob deGrom", ]
pit <- read.csv('atc_pitchers_2020.shortened.csv')
pit <- read.csv('atc_pitchers_2020_shortened.csv')
pit <- read.csv('atc_pitchers_2020_shortened.csv')
library(readr)
atc_pitchers_2020_shortened <- read_csv("atc_pitchers_2020_shortened.csv")
View(atc_pitchers_2020_shortened)
apply(atc_pitchers_2020_shortened, 1, pqs)
atc_pitchers_2020_shortened
pqs(atc_pitchers_2020_shortened[i, ])
for (i in seq_len(nrow(atc_pitchers_2020_shortened))) {
pqs(atc_pitchers_2020_shortened[i, ])
}
res = numeric(0)
for (i in seq_len(nrow(atc_pitchers_2020_shortened))) {
res[i] = pqs(atc_pitchers_2020_shortened[i, ])
}
res
res = numeric(0)
for (i in seq_len(nrow(atc_pitchers_2020_shortened))) {
res[i] = round(pqs(atc_pitchers_2020_shortened[i, ]))
}
atc_pitchers_2020_shortened$QS <- res
res = numeric(0)
for (i in seq_len(nrow(atc_pitchers_2020_shortened))) {
res[i] = round(pqs(atc_pitchers_2020_shortened[i, ]))
}
atc_pitchers_2020_shortened$QS <- res
full_20
names(full_20)
names(full_21)
names(full_22)
full_20 <- read.csv('combined_2020_projections.csv')
full_20
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20)
names(full_21)
names(full_22)
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_22)
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
rbind(full_20, full_21, full_22)
combined_proj = rbind(full_20, full_21, full_22)
write.csv(combined_proj, 'combined_projections.csv')
table(combined_proj)
table(combined_proj$Year)
left_join(combined_proj, id_map, by = c('PlayerId' = 'IDFANGRAPHS'))
left_join(combined_proj, id_map, by = c('player_id' = 'IDFANGRAPHS'))
names(combined_proj)
left_join(combined_proj, id_map, by = c('playerid' = 'IDFANGRAPHS'))
names(id_map)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(8, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(8, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
write.csv(combined_proj, 'combined_projections.csv')
View(combined_proj)
View(full_20)
View(full_21)
View(full_22)
full_22 <- read.csv('combined_2022_projections.csv')
View(full_22)
full_22 <- read.csv('combined_2022_projections.csv')
names(full_22) <- names(full_21)
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
write.csv(combined_proj, 'combined_projections.csv')
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
write.csv(combined_proj, 'combined_projections.csv')
names(full_20)
names(full_21)
names(full_22)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
nrow(full_20)
nrow(full_20) + nrow(full_21) + nrow(full_22)
View(combined_proj)
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS'))
write.csv(combined_proj, 'combined_projections.csv')
View(combined_proj)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS')) %>%
distinct()
write.csv(combined_proj, 'combined_projections.csv')
names(combined_proj)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS')) %>%
distinct()
names(combined_proj)
full_20 <- read.csv('combined_2020_projections.csv')
full_21 <- read.csv('combined_2021_projections.csv')
full_22 <- read.csv('combined_2022_projections.csv')
names(full_20) <- names(full_21)
names(full_22) <- names(full_21)
combined_proj = rbind(full_20, full_21, full_22)
combined_proj = left_join(combined_proj, id_map[, c(9, 19, 20)], by = c('playerid' = 'IDFANGRAPHS')) %>%
distinct()
write.csv(combined_proj, 'combined_projections.csv')
names(combined_proj)
